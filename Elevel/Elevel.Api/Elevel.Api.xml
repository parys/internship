<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Elevel.Api</name>
    </assembly>
    <members>
        <member name="M:Elevel.Api.Controllers.FileController.Upload(System.Collections.Generic.List{Microsoft.AspNetCore.Http.IFormFile})">
            <summary>
            Uploads the files from the list.
            Receives the list of the files we need to transport to @"wwwroot\files".
            Returns nothing.
            </summary>
            <param name="formFiles">Files (as a list)</param>
            <returns></returns>
        </member>
        <member name="M:Elevel.Api.Controllers.FileController.Download">
            <summary>
            Downloads all files from folder @"wwwroot\files" as a zip-archive.
            Receives nothing - everything is completed inside the function.
            Returns the ZIP-file with all the files. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Elevel.Api.Controllers.QuestionController.GetQuestionList(Elevel.Application.Features.QuestionCommands.GetQuestionListQuery.Request)">
            <summary>
            Receive CreatorId, QuestionNumber, and Level from query.
            Returns all not deleted questions without answers.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Elevel.Api.Controllers.QuestionController.GetQuestionById(Elevel.Application.Features.QuestionCommands.GetQuestionDetailQuery.Request)">
            <summary>
            Receives id from route.
            Returns Question Id, Question Nuber, Level, Question Text, List of Answers(Id, QuestionId, Answer text, IsRight)
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Elevel.Api.Controllers.QuestionController.CreateQuestionAsync(Elevel.Application.Features.QuestionCommands.CreateQuestionCommand.Request)">
            <summary>
            Receives Level, Question Text, List of Answers(Answer text, IsRight) from body
            Returns test id 
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Elevel.Api.Controllers.QuestionController.UpdateQuestionAsync(System.Guid,Elevel.Application.Features.QuestionCommands.UpdateQuestionCommand.Request)">
            <summary>
            Receives id from route; Level, Question Text, List of Answers(Answer text, IsRight) from body
            Returns test id 
            </summary>
            <param name="id"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Elevel.Api.Controllers.QuestionController.DeleteQuestionAsync(Elevel.Application.Features.QuestionCommands.DeleteQuestionCommand.Request)">
            <summary>
            Receives id from route
            Returns id and Deleted flag
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Elevel.Api.Controllers.TestController.CreateTestAsync(Elevel.Application.Features.TestCommands.CreateTestCommand.Request)">
            <summary>
            For "Start test" button without assignment. 
            Receives test level form body, UserId from token.
            Returns the whole test
            </summary>
            <param name="request">UserId (from token), Level</param>
            <returns>
            The whole test information 
            Such as: 
             * Id
             * TestNumber
             * Level
             * UserId
             * TestPassingDate
             * Audition with List of Questions with List of Answers
             * Essay
             * Speaking
             * List of GrammarQuestions with List of Answers
            </returns>
        </member>
        <member name="M:Elevel.Api.Controllers.TestController.AssignTestAsync(Elevel.Application.Features.TestCommands.AssignTestCommand.Request)">
            <summary>
            Can only be done by HR from "Assign test". 
            Receives AssignmentEndDate, UserId, Priority from body, and HrId from token. 
            Returns test id
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Elevel.Api.Controllers.TestController.StartTestByIdAsync(System.Guid,Elevel.Application.Features.TestCommands.StartTestByIdQuery.Request)">
            <summary>
            Can only be done dy assigned for this test user. 
            Receives level from body, UserId from token, and TestId from route
            Returns the whole test
            </summary>
            <param name="id"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Elevel.Api.Controllers.TestController.GetAllTestsAsync(Elevel.Application.Features.TestCommands.GetAllTestsQuery.Request)">
            <summary>
            Get all test test. 
            May receive Id, UserId, TestPassingDate, and Level from query
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Elevel.Api.Controllers.TestController.SubmitTestAsync(System.Guid,Elevel.Application.Features.TestCommands.SubmitTestCommand.Request)">
            <summary>
            Can be only done by assigned for this user. 
            Receives Id from route, UserId from token, List of GrammarAnswers, List of AuditionAnswers, EssayAnswer, and SpeakingAnswerReference from body. 
            Returns Id, Level, TestPassingDate, GrammarMark, AuditionMark, and UserId
            </summary>
            <param name="id"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Elevel.Api.Controllers.TestController.CheckTestAsync(System.Guid,Elevel.Application.Features.TestCommands.CheckTestCommand.Request)">
            <summary>
            Can only be done by Coach.
            Receives TestId from route, coachId from token, SpeakingMark, EssayMark, and Comment from body.
            Returns Level, TestNumber, EssayMark, SpeakingMark, Comment, CoachId
            </summary>
            <param name="id"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Elevel.Api.Controllers.TestController.GetAllTestForCoach(Elevel.Application.Features.TestCommands.GetTestsForCoachQuery.Request)">
            <summary>
            Receives: IsChecked(false default), TestPassingDate, Level, Priority from query.
            Returns: Id, TestNumber, Level, TestPassingDate, Priority, EssayAnswer, SpeakingAnswerReference
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Elevel.Api.Controllers.TestController.GetAllTestForAdmin(Elevel.Application.Features.TestCommands.GetTestsForAdminQuery.Request)">
            <summary>
            Receives: IsAssigned(false default), TestPassingDate, Level, Priority from query.
            Returns: Id, TestNumber, Level, TestPassingDate, Priority, coachId
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Elevel.Api.Controllers.TestController.AssignTestForCoach(System.Guid,Elevel.Application.Features.TestCommands.AssignTestForCoachCommand.Request)">
            <summary>
            Receives TestId in route and body and CoachId from body.
            Returns TestId and CoachId
            </summary>
            <param name="id"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Elevel.Api.Controllers.UserController.GetAllUsersAsync(Elevel.Application.Features.UserFeatures.GetUserListQuery.Request)">
            <summary>
            Returns all users
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Elevel.Api.Controllers.UserController.GetTokenAsync(Elevel.Domain.Authentication.TokenRequestModel)">
            <summary>
            Receives Email, and Password
            Returns Token, and Id
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Elevel.Api.Controllers.UserController.GetCoachesAsync(Elevel.Application.Features.UserFeatures.GetCoachesQuery.Request)">
            <summary>
            Receives piece of name parameter
            comparing with FirstName, LastName, and UserName 
            Returns list of coaches(id, FirstName, LastName, UserName, TestCount)
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Elevel.Api.Controllers.UserController.UserInfo">
            <summary>
            returns user
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
